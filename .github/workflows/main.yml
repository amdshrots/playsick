name: Playit RDP Tunnel
on: workflow_dispatch

jobs:
  setup-rdp-tunnel:
    runs-on: wandows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Playit cache
        uses: actions/cache@v4
        with:
          path: ${{ env.USERPROFILE }}\playit
          key: playit-cache

      - name: Download & install Playit (if needed)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit\playit.exe"

      - name: Upload Playit cache
        uses: actions/cache@v4
        with:
          path: ${{ env.USERPROFILE }}\playit
          key: playit-cache

      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

      - name: Configure Firewall and Authentication
        run: |
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "p@ssw0rd!" -Force)

      - name: Start Playit and Set Up RDP Tunnel
        env:
          PLAYIT_AUTH_KEY: ${{ secrets.PL }}
        run: |
          Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow -Wait
          Start-Process -FilePath "$env:USERPROFILE\playit.exe" -NoNewWindow

      - name: Upload installed-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: playit-installed-files
          path: ${{ env.USERPROFILE }}\playit

      - name: Keep the GitHub Action Runner Alive
        run: Start-Sleep -Seconds 11800
